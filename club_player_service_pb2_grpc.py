# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import club_player_service_pb2 as club__player__service__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2

GRPC_GENERATED_VERSION = '1.65.2'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in club_player_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class ClubPlayerServiceGrpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClubPlayer = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/GetClubPlayer',
                request_serializer=club__player__service__pb2.ClubPlayerRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)
        self.GetClubPlayers = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/GetClubPlayers',
                request_serializer=club__player__service__pb2.ClubPlayersRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayersResponse.FromString,
                _registered_method=True)
        self.GetPlayerClubs = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/GetPlayerClubs',
                request_serializer=club__player__service__pb2.GetPlayerClubsRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.GetPlayerClubsResponse.FromString,
                _registered_method=True)
        self.CreateClubPlayer = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/CreateClubPlayer',
                request_serializer=club__player__service__pb2.CreateClubPlayerRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)
        self.DeleteClubPlayer = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/DeleteClubPlayer',
                request_serializer=club__player__service__pb2.ClubPlayerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                _registered_method=True)
        self.UpdatePlayerClubRole = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerClubRole',
                request_serializer=club__player__service__pb2.UpdatePlayerClubRoleRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)
        self.UpdatePlayerAllowPlay = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerAllowPlay',
                request_serializer=club__player__service__pb2.UpdatePlayerAllowPlayRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)
        self.UpdatePlayerDescription = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerDescription',
                request_serializer=club__player__service__pb2.UpdatePlayerDescriptionRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)
        self.UpdatePlayerTags = channel.unary_unary(
                '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerTags',
                request_serializer=club__player__service__pb2.UpdatePlayerTagsRequest.SerializeToString,
                response_deserializer=club__player__service__pb2.ClubPlayerResponse.FromString,
                _registered_method=True)


class ClubPlayerServiceGrpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetClubPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClubPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerClubs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateClubPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClubPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlayerClubRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlayerAllowPlay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlayerDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlayerTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClubPlayerServiceGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClubPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClubPlayer,
                    request_deserializer=club__player__service__pb2.ClubPlayerRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
            'GetClubPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClubPlayers,
                    request_deserializer=club__player__service__pb2.ClubPlayersRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayersResponse.SerializeToString,
            ),
            'GetPlayerClubs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayerClubs,
                    request_deserializer=club__player__service__pb2.GetPlayerClubsRequest.FromString,
                    response_serializer=club__player__service__pb2.GetPlayerClubsResponse.SerializeToString,
            ),
            'CreateClubPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateClubPlayer,
                    request_deserializer=club__player__service__pb2.CreateClubPlayerRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
            'DeleteClubPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClubPlayer,
                    request_deserializer=club__player__service__pb2.ClubPlayerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            ),
            'UpdatePlayerClubRole': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlayerClubRole,
                    request_deserializer=club__player__service__pb2.UpdatePlayerClubRoleRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
            'UpdatePlayerAllowPlay': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlayerAllowPlay,
                    request_deserializer=club__player__service__pb2.UpdatePlayerAllowPlayRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
            'UpdatePlayerDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlayerDescription,
                    request_deserializer=club__player__service__pb2.UpdatePlayerDescriptionRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
            'UpdatePlayerTags': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlayerTags,
                    request_deserializer=club__player__service__pb2.UpdatePlayerTagsRequest.FromString,
                    response_serializer=club__player__service__pb2.ClubPlayerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'club_player_service.ClubPlayerServiceGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('club_player_service.ClubPlayerServiceGrpc', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ClubPlayerServiceGrpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetClubPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/GetClubPlayer',
            club__player__service__pb2.ClubPlayerRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetClubPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/GetClubPlayers',
            club__player__service__pb2.ClubPlayersRequest.SerializeToString,
            club__player__service__pb2.ClubPlayersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayerClubs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/GetPlayerClubs',
            club__player__service__pb2.GetPlayerClubsRequest.SerializeToString,
            club__player__service__pb2.GetPlayerClubsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateClubPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/CreateClubPlayer',
            club__player__service__pb2.CreateClubPlayerRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteClubPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/DeleteClubPlayer',
            club__player__service__pb2.ClubPlayerRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlayerClubRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerClubRole',
            club__player__service__pb2.UpdatePlayerClubRoleRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlayerAllowPlay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerAllowPlay',
            club__player__service__pb2.UpdatePlayerAllowPlayRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlayerDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerDescription',
            club__player__service__pb2.UpdatePlayerDescriptionRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlayerTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/club_player_service.ClubPlayerServiceGrpc/UpdatePlayerTags',
            club__player__service__pb2.UpdatePlayerTagsRequest.SerializeToString,
            club__player__service__pb2.ClubPlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
